/****************************************************************************
**
* *Copyright (C) 2014
**
* *This file is generated by the Magus toolkit
**
* *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
* *"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
* *LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
* *A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
* *OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
* *LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* *DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* *THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* *(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
* *OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

#include "node_porttype.h"

#include <QBrush>
#include <QColor>
#include <QLinearGradient>
#include <QMessageBox>
#include <QPainter>
#include <QPen>
#include <QPixmap>
#include <QStyleOptionGraphicsItem>

#include "node_constants.h"
#include "node_port.h"

void QtPortType::addPortTypeToConnectionPolicy(const QtPortType &portType)
{
	mConnectionPolicy.append(portType.m_port_type);
}

bool QtPortType::isConnectionAllowed(const QtPortType &portType)
{
	for (unsigned int type : mConnectionPolicy) {
		if (type == portType.m_port_type)
			return true;
	}

	return false;
}

void QtPortType::clearConnectionPolicy()
{
	mConnectionPolicy.clear();
}

QtInputPortType::QtInputPortType()
    : QtPortType()
{
	m_port_type = NODE_PORT_TYPE_INPUT;
}

QtOutputPortType::QtOutputPortType()
    : QtPortType()
{
	m_port_type = NODE_PORT_TYPE_OUTPUT;
}
